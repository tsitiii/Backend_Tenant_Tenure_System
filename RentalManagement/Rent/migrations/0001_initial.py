# Generated by Django 5.1 on 2024-11-12 16:19

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid Ethiopian phone number starting with 251 or 09 and followed by 8 digits.', regex='^2519\\d{8}$|^09\\d{8}$')], verbose_name='Phone Number')),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=2552, null=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='Rent/images')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='Rent/images')),
                ('file', models.FileField(blank=True, null=True, upload_to='Rent/files')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('sub_city', models.CharField(max_length=100)),
                ('kebele', models.CharField(max_length=255, null=True)),
                ('unique_place', models.TextField()),
                ('house_number', models.PositiveBigIntegerField()),
                ('house_type', models.CharField(choices=[('Full House', 'Full House'), ('Service House', 'Service House')], max_length=255)),
                ('number_of_rooms', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('new', 'New Property'), ('old_not_been_rented', 'Old Property Not Been Rented'), ('old_has_been_rented', 'Old Property Has Been Rented')], max_length=100, verbose_name='Property condition')),
                ('rent_amount', models.PositiveBigIntegerField(db_index=True, verbose_name='Rent amount in birr')),
                ('Lease_year', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(2)], verbose_name='Lease year')),
                ('pre_payment_birr', models.PositiveBigIntegerField(verbose_name='pre payment paid in birr')),
                ('pre_payment_month', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='pre  payment paid in month')),
                ('document', models.FileField(null=True, upload_to='Rent/files', verbose_name='ownership document')),
                ('payment_date', models.DateTimeField()),
                ('other_bills', models.CharField(choices=[('Tenant', 'Tenant'), ('Landlord', 'Landlord')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_tenants', models.PositiveIntegerField(default=0)),
                ('total_landlords', models.PositiveIntegerField(default=0)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('total_admins', models.PositiveIntegerField(default=0)),
                ('total_witnesses', models.PositiveIntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Witness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='your name')),
                ('father_name', models.CharField(max_length=255, verbose_name='Father name')),
                ('kebele_ID', models.ImageField(upload_to='Rent/images')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='witnesses', to='Rent.property')),
            ],
        ),
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('first_name', models.CharField(max_length=255, verbose_name='your name')),
                ('father_name', models.CharField(max_length=255, verbose_name='Father name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Grand father name')),
                ('region', models.CharField(max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('sub_city', models.CharField(max_length=100)),
                ('kebele', models.CharField(max_length=3, null=True, validators=[django.core.validators.RegexValidator(message='The kebele must be a number.', regex='^\\d+$')])),
                ('unique_place', models.TextField()),
                ('house_number', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('phone', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a valid Ethiopian phone number starting with 251 or 09 and followed by 8 digits.', regex='^2519\\d{8}$|^09\\d{8}$')], verbose_name='Phone Number')),
                ('kebele_ID', models.ImageField(upload_to='Rent/images')),
                ('file', models.FileField(upload_to='', verbose_name='Rent/images')),
                ('profile_picture', models.ImageField(upload_to='Rent/images', verbose_name='profile picture')),
                ('role', models.CharField(choices=[('is_admin', 'Administrator'), ('is_tenant', 'Tenant'), ('is_landlord', 'Landlord')], default='is_tenant', max_length=30)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='property',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, default='Add a few words about yourself.', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='Rent/images/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('read', 'Read')], default='draft', max_length=140)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
